@model IEnumerable<FinalBoostrapIntro.Models.Author>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@*<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Biography)
            </th>
            <th>Actions</th>
        </tr>
        </thead> 

        <tbody data-bind="foreach: authors">
        <tr>
            <td data-bind="text: FirstName"></td>
            <td data-bind="text: LastName"></td>
            <td data-bind="text: Biography"></td>
            <td>
                <a data-bind="attr: { href : '@Url.Action("Details")/ + Id'}" class="btn btn-info">Details</a>
                <a data-bind="attr: { href : '@Url.Action("Edit")/ + Id'}" class="btn btn-primary">Edit</a>
                <a data-bind="attr: { href : '@Url.Action("Delete")/ + Id'}" class="btn btn-danger">Delete</a>    
            </td>
        </tr>
        </tbody>
    </table>
</div>*@

<div class="table-responsive">
    <table id="authorGrid" class="table table-condensed table-hover table-striped">
        <thead>
        <tr>
            <th data-column-id="id" data-type="numeric" data-visible="false">Id</th>
            <th data-column-id="firstName">First Name</th>
            <th data-column-id="lastName">Last Name</th>
            <th data-column-id="biography">Biography</th>
            <th data-column-id="commands" data-formatter="commands" data-sortable="false"></th>
        </tr>
        </thead>
    </table>
</div>

@section Scripts{
    
    @Scripts.Render("/Scripts/ViewModels/AuthorIndexViewModel.js")
    <script>

        var viewModel = new AuthorIndexViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);

        @*function ViewModel(authors) {
            var self = this;
            self.authors = authors;
        };

        var viewModel = new ViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);*@

        $(function() {
            console.log("ready!");
            
            var bootGridInstance = $('#authorGrid');

            function InitializeBootGrid() {
                bootGridInstance.bootgrid({
                    ajax: true,
                    url: "/Authors/Grid",
                    formatters: {
                        "commands": function (column, row) {
                            return "<a href=\"/Authors/Details/"+ row.id + "\" class=\"btn  btn-info command-details\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-ellipsis-h\"></span></a> " +
                                "<a href=\"/Authors/Edit/" + row.id + "\" class=\"btn  btn-primary command-edit\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-pencil\"></span></a> " +
                                "<a data-toggle=\"modal\"  href=\"/Authors/Delete/" + row.id + "\" class=\"btn btn-danger command-delete\" data-row-id=\"" + row.id + "\"><span class=\"fa fa-trash-o\"></span></a>";
                        }
                    },
                    labels: {
                        noResults :  'There are no authors to display. Click @Html.ActionLink("here", "Create") to create one now.'
                    }
                }).on("loaded.rs.jquery.bootgrid", function()
                {
                    /* Executes after data is loaded and rendered */
                    bootGridInstance.find(".command-edit").on("click", function(e)
                    {
                        alert("You pressed edit on row: " + $(this).data("row-id"));
                    }).end().find(".command-delete").on("click", function(e) {
                        showDeleteModal;
                        alert("You pressed delete on row: " + $(this).data("row-id"));
                    }).end().find(".command-details").on("click", function(e) {
                        alert("You pressed details on row: " + $(this).data("row-id"));
                    });
                });
            };

            function ReloadGrid() {
                console.log("Reloading Grid");
                bootGridInstance.bootgrid("reload");
            };

            InitializeBootGrid();
            ReloadGrid();
        });
    </script>

}